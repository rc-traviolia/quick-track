@using Microsoft.AspNetCore.Components;
@using QuickTrackWeb.Services.TrackedItemDataService;
@using QuickTrackWeb.Shared.Models;
@using System.Threading.Tasks;
@inject ITrackedItemDataService _trackedItemDataService

@if (ShowDialog)
{
    <div class="modal fade show d-block"  tabindex="-1" role="dialog" style="color:black">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Please Confirm Deletion of @trackedItemToDelete.Name</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">

                    <EditForm Model="@trackedItemToDelete" OnValidSubmit="@HandleValidSubmit">
                        <button type="submit" class="btn red-button">Delete</button>
                        <a class="btn btn-outline-primary" @onclick="@Close">Cancel</a>
                    </EditForm>

                </div>
            </div>
        </div>
    </div>
}

@code{
    public bool ShowDialog { get; set; }

    [Parameter]
    public EventCallback<bool> CloseEventCallback { get; set; }

    protected TrackedItemWithoutProgressDto trackedItemToDelete { get; set; }


    public void Show(TrackedItemWithoutProgressDto trackedItem)
    {
        trackedItemToDelete = trackedItem;
        ShowDialog = true;
        StateHasChanged();
    }


    public void Close()
    {
        ShowDialog = false;
        StateHasChanged();
    }

    protected async Task HandleValidSubmit()
    {
        await _trackedItemDataService.DeleteTrackedItem(trackedItemToDelete.Id);
        ShowDialog = false;

        await CloseEventCallback.InvokeAsync(true);
        StateHasChanged();
    }


}